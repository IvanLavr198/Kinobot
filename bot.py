import os
import logging
import requests
from telegram import Update, Bot
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    CallbackContext,
)

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")  # –ü–æ–ª—É—á–∏—Ç—å —É @BotFather
TMDB_API_KEY = os.getenv("TMDB_API_KEY")      # –ö–ª—é—á —Å https://www.themoviedb.org/
PORT = int(os.getenv("PORT", "8080"))          # –î–ª—è Render
WEBHOOK_URL = os.getenv("WEBHOOK_URL")         # –ù–∞–ø—Ä–∏–º–µ—Ä: https://your-bot-name.onrender.com

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# --- –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞ –≤ TMDb ---
def search_movie(title: str):
    url = "https://api.themoviedb.org/3/search/movie"
    params = {
        "api_key": TMDB_API_KEY,
        "query": title,
        "language": "ru-RU",
    }
    try:
        response = requests.get(url, params=params)
        data = response.json()
        if data["results"]:
            return data["results"][0]  # –ü–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ TMDb: {e}")
    return None

# --- –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ ---
async def start(update: Update, context: CallbackContext):
    await update.message.reply_text(
        "üé¨ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤.\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞, –∏ —è –Ω–∞–π–¥—É –µ–≥–æ!"
    )

async def handle_message(update: Update, context: CallbackContext):
    movie_title = update.message.text
    movie = search_movie(movie_title)
    
    if not movie:
        await update.message.reply_text("–§–∏–ª—å–º –Ω–µ –Ω–∞–π–¥–µ–Ω üò¢")
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    title = movie.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
    year = movie.get("release_date", "?")[:4]
    rating = movie.get("vote_average", "?")
    overview = movie.get("overview", "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è.")
    poster_path = movie.get("poster_path")
    
    text = f"üé• <b>{title}</b> ({year})\n‚≠ê <b>{rating}/10</b>\n\n{overview}"
    
    if poster_path:
        poster_url = f"https://image.tmdb.org/t/p/w500{poster_path}"
        await update.message.reply_photo(poster_url, caption=text, parse_mode="HTML")
    else:
        await update.message.reply_text(text, parse_mode="HTML")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–≤–µ–±—Ö—É–∫–∏ –¥–ª—è Render) ---
def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞ (–¥–ª—è Render)
    if WEBHOOK_URL:
        app.run_webhook(
            listen="0.0.0.0",
            port=PORT,
            webhook_url=f"{WEBHOOK_URL}/{TELEGRAM_TOKEN}",
        )
    else:
        app.run_polling()  # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

if __name__ == "__main__":
    main()
